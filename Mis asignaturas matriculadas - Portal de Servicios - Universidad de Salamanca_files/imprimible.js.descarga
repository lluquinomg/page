var contenidoImprimible;
var salida = "";
var ruta_estaticos = "/portlets";
                                                                          
// Recorre el árbol DOM de un nodo dado y lo va                           
// pintando en la variable salida                                         
function parseaArbolDOM(tree) {                                           
	if(tree.hasChildNodes()) {                                              
		if (esUnTagBueno(tree.tagName))                                       
			salida += "<" + tree.tagName.toLowerCase() + ">";                   
		var nodes=tree.childNodes.length;                                     
		for(var i=0; i<tree.childNodes.length; i++)                           
			parseaArbolDOM(tree.childNodes[i]);                                 
		if (esUnTagBueno(tree.tagName))                                       
			salida += "</" + tree.tagName.toLowerCase() + ">";                  
	} else {                                                                
		if (tree.nodeValue != null)                                           
			salida += tree.nodeValue;                                           
	}                                                                       
}                                                                         

function unescapeHTML(html) {
        var htmlNode = document.createElement('DIV');
        htmlNode.innerHTML = html;
        return htmlNode.innerHTML;
}


function convierteAXML(html) {
	var temp=document.createElement("div");
	temp.innerHTML=html;
	return serializaAXML(temp);
}

function convierteTagsImg(nodo) {
  // si el nodo de una imagen creamos un nodo con el valor del alt (texto alternativo)
  if (nodo.tagName!=null && nodo.tagName.toLowerCase()=="img") {
    var nuevoNodo = document.createElement("SPAN");
    if(nodo.hasAttribute("alt")){
      nuevoNodo.innerHTML = nodo.getAttribute("alt");
     }else{
      nuevoNodo.innerHTML = "";
     } 
     nodo.parentNode.replaceChild(nuevoNodo, nodo);
  }
  for(var i=0; i<nodo.childNodes.length; i++) {
    convierteTagsImg(nodo.childNodes.item(i));
  }
}
               
function serializaAXML (div) {
 //hacemos un clon de la capa
 var divAConvertir = div.cloneNode(true);
 //convierte todos las imagenes a un span con el valor del texto alternativo(alt)
 convierteTagsImg(divAConvertir);

	var resultado;
  if (document.all) {	
	  	//resultado = serializaAXMLExplorer(div);		//para IE
	 	 resultado = serializaAXMLExplorer(divAConvertir);		//para IE
	}
	else { 
 	  	var xs = new XMLSerializer();
   	//	resultado = xs.serializeToString (div); //para mozilla
	  	resultado = xs.serializeToString (divAConvertir); //para mozilla
	}

	return resultado;
}
/*               
function serializaAXML (div) {
	if (document.all) {	
		return serializaAXMLExplorer(div);		
	}
	else {
		var xs = new XMLSerializer();
		return xs.serializeToString (div);
	}
}*/
                                         
function serializaAXMLExplorer(tree,salida) {
	var salida='';
	if (tree.tagName==null) {
		if (tree.nodeValue != null) {
			salida += '<![CDATA['+tree.nodeValue+']]>';
			return salida;
		}
		else {
			return '';
		}
	}
	var tagName = tree.tagName;
	if (tagName.charAt(0)=='/')  {
		tagName = tagName.substring(1);	
	}
	if (tagName=='' || tagName=='!') {
		return '';
	}
	if (tagName.toLowerCase()!="A") {
		salida += "<" + tagName.toLowerCase() + " ";
			for (var j=0; j<tree.attributes.length ; j++ ) {
				if (tree.attributes[j].nodeName!="href" && tree.attributes[j].nodeValue!=null && tree.attributes[j].nodeValue!='') {	
					salida+=tree.attributes[j].nodeName+'="'+tree.attributes[j].nodeValue+'" ';
				}
			}
		salida+=">"
	}
	if(tree.hasChildNodes()) {
		
		var nodes=tree.childNodes.length;
		for(var i=0; i<tree.childNodes.length; i++) {
			salida+=serializaAXMLExplorer(tree.childNodes[i],salida);
		}
	}
	if (tagName.toLowerCase()!="A") {
		salida += "</" + tagName.toLowerCase() + ">";
	}
	return salida;
}
                  
// Comprobamos si el tag nos interesa para la                             
// posterior generación de en formato excel                               
function esUnTagBueno(nombre) {                                           
	return nombre.toUpperCase() == "TABLE" || 						                  
		nombre.toUpperCase() == "TD" ||                                 
		nombre.toUpperCase() == "TR";                                   
}                                                                         


function popup(width, height, filename) {
	 var left = (screen.width - width) / 2;
	 var top = (screen.height - height) / 2;
	 var attributes = "left=" + left +
	 ", top=" + top +
	 ", width=" + width +
	 ", height=" + height + ", ";
	 attributes += "toolbar=0, location=0, directories=0, ";
	 attributes += "status=0, menubar=0, scrollbars=0, ";
	 attributes += "resizable=0";
	 return window.open(ruta_estaticos + "/html/imprimible.html", "appwindow", attributes);
 }    

function popupExcel(width, height, filename) {
	 var left = (screen.width - width) / 2;
	 var top = (screen.height - height) / 2;
	 var attributes = "left=" + left +
	 ", top=" + top +
	 ", width=" + width +
	 ", height=" + height + ", ";
	 attributes += "toolbar=0, location=0, directories=0, ";
	 attributes += "status=0, menubar=0, scrollbars=0, ";
	 attributes += "resizable=0";
	 return window.open(filename, "appwindow", attributes);
 }    

function muestraVersionImprimible(htmlAImprimir) {
	contenidoImprimible = htmlAImprimir;			
	var vista = popup(780, 500, "");			
}

function imprimePDF2(idCapa,dUsuario,dBusqueda,dPortlet,dTitulo,dOrientacion) {
	try {
	   var tNombrePortlet= "<table border='0'><tr><td>" + dPortlet + "</td></tr></table>";
	   if(imprimePDF2.arguments.length == 6)
	   {     
	     if (dUsuario==null) dUsuario="";
	     if (dBusqueda==null) dBusqueda="";

	     if (document.getElementById("imprimible_" + idCapa) != null)
		var divNode = document.getElementById("imprimible_" + idCapa).cloneNode(true);
		//convierteTagsImg(divNode);
		trataInputsDOM(divNode);
		imprimeHTML2recorreNodos(divNode);
		
  		document.forms["formPDF_" + idCapa].tituloPortlet.value = dTitulo+"~"+ dUsuario+"~"+ dBusqueda;;
		document.forms["formPDF_" + idCapa].orientacion.value = dOrientacion;
		document.forms["formPDF_" + idCapa].html.value = "<html><body>" + divNode.innerHTML + "</body></html>";
		document.forms["formPDF_" + idCapa].submit();
	   }
	   else
	   {
	     if (document.getElementById("imprimible_" + idCapa) != null)
		var divNode = document.getElementById("imprimible_" + idCapa).cloneNode(true);
		//convierteTagsImg(divNode);
		imprimeHTML2recorreNodos(divNode);
	    document.forms["formPDF_" + idCapa].tituloPortlet.value = dTitulo;
		document.forms["formPDF_" + idCapa].orientacion.value = dOrientacion;
		document.forms["formPDF_" + idCapa].html.value = "<html><body>" + divNode.innerHTML + "</body></html>";
		document.forms["formPDF_" + idCapa].submit()
	   }
	}
	catch (error) {
		alert("Ha ocurrido algún error generando la vista de impresión.\n Posiblemente ésta no esté disponible");
	}
	   
}		

function imprimeHTML2(idCapa,dUsuario,dBusqueda,dPortlet) {
	try {
	   var tNombrePortlet= "<table border='0'><tr><td>" + dPortlet + "</td></tr></table>";
	   if(imprimeHTML2.arguments.length == 4)
	   {     
	     var tUsuario = ""; 
	     var tBusqueda  = "";
	     if (dUsuario!=null) tUsuario = "<table border='0'><tr><td>" + dUsuario + "</td></tr></table>";
	     if (dBusqueda !=null) tBusqueda = "<table border='0'><tr><td>" + dBusqueda + "</td></tr></table>";
	     if (document.getElementById("imprimible_" + idCapa) != null)
		var divNode = document.getElementById("imprimible_" + idCapa).cloneNode(true);
		imprimeHTML2recorreNodos(divNode);
	       muestraVersionImprimible(tNombrePortlet + tUsuario + tBusqueda + divNode.innerHTML);
	   }
	   else
	   {
	     if (document.getElementById("imprimible_" + idCapa) != null)
		var divNode = document.getElementById("imprimible_" + idCapa).cloneNode(true);
		imprimeHTML2recorreNodos(divNode);
	       //muestraVersionImprimible(tNombrePortlet + divNode.innerHTML);
	   }
	}
	catch (error) {
		alert("Ha ocurrido algún error generando la vista de impresión.\n Posiblemente ésta no esté disponible");
	}
	   
} 

function imprimeHTML2recorreNodos(nodo) {
	try {
		if (nodo.tagName!=null) {
			if (nodo.tagName=="SCRIPT") {
			//	alert("Eliminando:"+nodo);
				nodo.parentNode.removeChild(nodo);
			}
			if (nodo.tagName=="A") {
				var parentNode = nodo.parentNode;				
				if (nodo.getAttribute("class")!=null || nodo.className!=null) {
					var nodoSpan = document.createElement("SPAN");
					
					
					if (document.all) {
						nodoSpan.className=nodo.className;
					}
					else {
						nodoSpan.setAttribute("class",nodo.getAttribute("class"));
					}
					
					parentNode.appendChild(nodoSpan);
					nodo=parentNode.removeChild(nodo);
					parentNode = nodoSpan;					
					
				}
				for (var i=0;i<nodo.childNodes.length; i++) {
					var auxNodo=nodo.childNodes.item(i).cloneNode(true);
					parentNode.appendChild(auxNodo);
				}
				for (var i=0;i<nodo.childNodes.length; i++) {
					parentNode.removeChild(nodo.childNodes.item(i));
				}
				
			}
  			if (nodo.tagName.toLowerCase()=="textarea") {
			    var nuevoNodo = document.createElement("SPAN");
			     nuevoNodo.innerHTML = nodo.value; 
			     nodo.parentNode.replaceChild(nuevoNodo, nodo);
				for (var i=0;i<nodo.childNodes.length; i++) {
					parentNode.appendChild(nodo.childNodes.item(i));
				}
			}
			else if (nodo.getAttribute("noimprimible")) {
				nodo.parentNode.removeChild(nodo);
			}
			
			else {
				for (var i=0; i<nodo.childNodes.length; i++) {
					var viejaLength = nodo.childNodes.length;
					imprimeHTML2recorreNodos(nodo.childNodes.item(i));
					if (nodo.childNodes.length!=viejaLength) {
						i--;
					}
				}
			}
			if (nodo.tagName.toLowerCase()=="img") {
				var nodoNuevo = document.createElement("img");
				nodoNuevo.setAttribute("src",nodo.getAttribute("src"));
				if(nodo.hasAttribute("width")){
					nodoNuevo.setAttribute("width",nodo.getAttribute("width"));
				}
				if(nodo.hasAttribute("height")){
					nodoNuevo.setAttribute("height",nodo.getAttribute("height"));
				}
				if(nodo.hasAttribute("alt")){
					nodoNuevo.setAttribute("alt",nodo.getAttribute("alt"));
				}
				nodo.parentNode.replaceChild(nodoNuevo, nodo);
			}
			if (nodo.tagName.toLowerCase()=="input" && nodo.type=='image') {
				var nodoNuevo = document.createElement("img");
				nodoNuevo.setAttribute("src",nodo.getAttribute("src"));
				if(nodo.hasAttribute("width")){
					nodoNuevo.setAttribute("width",nodo.getAttribute("width"));
				}
				if(nodo.hasAttribute("height")){
					nodoNuevo.setAttribute("height",nodo.getAttribute("height"));
				}
				if(nodo.hasAttribute("alt")){
					nodoNuevo.setAttribute("alt",nodo.getAttribute("alt"));
				}
				nodo.parentNode.replaceChild(nodoNuevo, nodo);
			}
		}
	}
	catch(e) {
		return;
	}
}

function imprimeHTML(idCapa) {
  try{
    // Comprobacion necesaria en Netscape
		if (document.all){
			if (document.all.capaHtml != null) {
				document.formXls.xml.value = document.all.capaHtml.innerHTML;
			}
		}
		muestraVersionImprimible(document.formXls.xml.value);
	}
	catch (error) {
		alert("imprimeHTML: Ha ocurrido algún error generando la vista de impresión.\n Posiblemente ésta no esté disponible\nError: "+error);
	}
}

function imprimeExcel() {
	try{ 
    // Comprobacion necesaria en Netscape
		if (document.all){
    	if (document.all.capaHtml != null) {
	    	document.formXls.xml.value = document.all.capaHtml.innerHTML;
    	}
    }
  	document.formXls.xml.value = '<impresion>'+convierteAXML(document.formXls.xml.value)+'</impresion>';
   	document.formXls.submit();
  }
  catch (error) {
	  alert("Ha ocurrido algún error generando la vista de impresión.\n Posiblemente ésta no esté disponible");
  }
}


function imprimeExcel2(idCapa,dUsuario,dBusqueda,dPortlet) {
    try {
	    if (document.getElementById("imprimible_" + idCapa) != null) {
		var tree = document.getElementById("imprimible_" + idCapa)
		//Se trata el árbol DOM para añadir campos span que puedan leerse por el XMLSerializer
		trataInputsDOM(tree);		
		var tNombrePortlet= "<table border='0'><tr><td>" + dPortlet + "</td></tr></table>";
		var salida = serializaAXML(tree);
		//var formulario = document.getElementById("formXls_" + idCapa);                                                     
		//salida='';
		//parseaArbolDOM(tree);                                            
		if(imprimeExcel2.arguments.length == 4)
		{
			var tUsuario = "";
			var tBusqueda = "";
			if (dUsuario != null) tUsuario = "<table border='0'><tr><td>" + dUsuario + "</td></tr></table>";
			if (dUsuario != null) tBusqueda = "<table border='0'><tr><td>" + dBusqueda + "</td></tr></table>";
			document.forms["formXls_" + idCapa].xml.value = '<impresion>'+convierteAXML(tNombrePortlet + tUsuario + tBusqueda) + salida + '</impresion>';
			//formulario.xml.value = '<impresion>'+convierteAXML(tNombrePortlet + tUsuario + tBusqueda) + salida + '</impresion>';
		}
		else {
			document.forms["formXls_" + idCapa].xml.value = '<impresion>' + convierteAXML(tNombrePortlet) + salida + '</impresion>';     
			//formulario.xml.value = '<impresion>' + convierteAXML(tNombrePortlet) + salida + '</impresion>';     

		}
		document.forms["formXls_" + idCapa].submit();
		//formulario.submit();
	    }
    }
	catch (error) {
		alert("Ha ocurrido algún error generando la vista de impresión.\n Posiblemente ésta no esté disponible");
	}
}

//Función que modifica el árbol DOM que se va a pasar al XMLSerializer
//Se recorrerá el árbol para crear campos de tipo span con el contenido de los input text, 
//ya que el método serializeToString no detecta los values de los campos input cuando genera XMLs.
function trataInputsDOM(nodo) {
	
	try {
		if (nodo.tagName!=null) {
			
			//Obtenemos los nodos de tipo input del árbol
			var nodosInput = nodo.getElementsByTagName('input');
			
			//Recorremos el array de inputs, si son de tipo 'text' creamos un span con el value correspondiente
			//y lo insertamos antes del nodo, ocultos.
			//No se sustituye directamente para no variar la longitud del array de inputs
			for (var i=0; i < nodosInput.length; i++ ) {
				var nodoViejo = nodosInput[i];
				if (nodoViejo.type=='text') {
					if (anadirSpan(nodoViejo)) {
						var nodoNuevo = document.createElement("span");
						nodoNuevo.appendChild(document.createTextNode(nodoViejo.value)); 
						nodoNuevo.style.display='none';
						nodoViejo.parentNode.insertBefore(nodoNuevo, nodoViejo);
					}
				}
			}
		}
	}
	catch(e) {
		return;
	}
}

function anadirSpan(nodoViejo) {
	var numeroSpans = nodoViejo.parentNode.getElementsByTagName('span').length;
	var numeroInputs = nodoViejo.parentNode.getElementsByTagName('input').length;
	return numeroSpans < numeroInputs;
}

function addLoadEvent(func) {
  var oldonload = window.onload;
  if (typeof window.onload != 'function') {
    window.onload = func;
  } else {
    window.onload = function() {
      oldonload();
      func();
    }
  }
}